{"version":3,"file":"main.js","sources":["../../../public_src/scripts/common/templates/helpers.js","../../../public_src/scripts/common/templates/.partials_compiled.js","../../../public_src/scripts/common/templates/.templates_compiled.js","../../../public_src/scripts/common/templates/main.js","../../../public_src/scripts/index/templates/.templates_compiled.js","../../../public_src/scripts/index/templates/main.js","../../../public_src/scripts/index/IndexView.js","../../../public_src/scripts/index/main.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('common/templates/helpers',[\r\n\t'lodash'\r\n], function (_) {\r\n\treturn {\r\n\t\tselect: function (selected, options) {\r\n\t\t\tvar attrs = _.keys(options.hash).map(function (key) {\r\n\t\t\t\treturn key + '=\"' + options.hash[key] + '\"';\r\n\t\t\t}).join(' ');\r\n\r\n\t\t\tvar ret = '<select ' + attrs + '>';\r\n\r\n\t\t\tvar opts = options.fn(this).replace(/value\\s*=\\s*(\"|')?([^><\\b]*)\\1/g, function (match, match1, match2) {\r\n\t\t\t\tif (match2 == selected) {\r\n\t\t\t\t\treturn match + ' selected';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tret += opts;\r\n\t\t\tret += '</select>';\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n});\r\n","\ndefine('common/partials_compiled',['handlebars'], function(Handlebars) {\n\nthis[\"JST\"] = this[\"JST\"] || {};\n\nHandlebars.registerPartial(\"common/footer\", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div id=\\\"footer\\\"><p class=\\\"copyright\\\">Copyright â“’<a class=\\\"corp\\\">NHN Corp.</a>All Rights Reserved.</p></div>\";\n  }));\n\nHandlebars.registerPartial(\"common/keybindings\", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<option value=\\\"\\\">Ace</option>\\r\\n<option value=\\\"vim\\\">Vim</option>\\r\\n<option value=\\\"emacs\\\">Emacs</option>\\r\\n\";\n  }));\n\nHandlebars.registerPartial(\"common/languages\", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<option value=\\\"abap\\\">ABAP</option>\\r\\n<option value=\\\"ada\\\">ADA</option>\\r\\n<option value=\\\"actionscript\\\">ActionScript</option>\\r\\n<option value=\\\"asciidoc\\\">AsciiDoc</option>\\r\\n<option value=\\\"assembly_x86\\\">Assembly_x86</option>\\r\\n<option value=\\\"autohotkey\\\">AutoHotKey</option>\\r\\n<option value=\\\"batchfile\\\">BatchFile</option>\\r\\n<option value=\\\"c9search\\\">C9Search</option>\\r\\n<option value=\\\"c_cpp\\\">C/C++</option>\\r\\n<option value=\\\"clojure\\\">Clojure</option>\\r\\n<option value=\\\"cobol\\\">Cobol</option>\\r\\n<option value=\\\"coffee\\\">CoffeeScript</option>\\r\\n<option value=\\\"coldfusion\\\">ColdFusion</option>\\r\\n<option value=\\\"csharp\\\">C#</option>\\r\\n<option value=\\\"css\\\">CSS</option>\\r\\n<option value=\\\"curly\\\">Curly</option>\\r\\n<option value=\\\"d\\\">D</option>\\r\\n<option value=\\\"dart\\\">Dart</option>\\r\\n<option value=\\\"diff\\\">Diff</option>\\r\\n<option value=\\\"dot\\\">Dot</option>\\r\\n<option value=\\\"erlang\\\">Erlang</option>\\r\\n<option value=\\\"ejs\\\">EJS</option>\\r\\n<option value=\\\"forth\\\">Forth</option>\\r\\n<option value=\\\"ftl\\\">FreeMarker</option>\\r\\n<option value=\\\"glsl\\\">Glsl</option>\\r\\n<option value=\\\"golang\\\">Go</option>\\r\\n<option value=\\\"groovy\\\">Groovy</option>\\r\\n<option value=\\\"haml\\\">HAML</option>\\r\\n<option value=\\\"haskell\\\">Haskell</option>\\r\\n<option value=\\\"haxe\\\">haXe</option>\\r\\n<option value=\\\"html\\\">HTML</option>\\r\\n<option value=\\\"html_ruby\\\">HTML (Ruby)</option>\\r\\n<option value=\\\"ini\\\">Ini</option>\\r\\n<option value=\\\"jade\\\">Jade</option>\\r\\n<option value=\\\"java\\\">Java</option>\\r\\n<option value=\\\"javascript\\\">JavaScript</option>\\r\\n<option value=\\\"json\\\">JSON</option>\\r\\n<option value=\\\"jsoniq\\\">JSONiq</option>\\r\\n<option value=\\\"jsp\\\">JSP</option>\\r\\n<option value=\\\"jsx\\\">JSX</option>\\r\\n<option value=\\\"julia\\\">Julia</option>\\r\\n<option value=\\\"latex\\\">LaTeX</option>\\r\\n<option value=\\\"less\\\">LESS</option>\\r\\n<option value=\\\"liquid\\\">Liquid</option>\\r\\n<option value=\\\"lisp\\\">Lisp</option>\\r\\n<option value=\\\"livescript\\\">LiveScript</option>\\r\\n<option value=\\\"logiql\\\">LogiQL</option>\\r\\n<option value=\\\"lsl\\\">LSL</option>\\r\\n<option value=\\\"lua\\\">Lua</option>\\r\\n<option value=\\\"luapage\\\">LuaPage</option>\\r\\n<option value=\\\"lucene\\\">Lucene</option>\\r\\n<option value=\\\"makefile\\\">Makefile</option>\\r\\n<option value=\\\"matlab\\\">MATLAB</option>\\r\\n<option value=\\\"markdown\\\">Markdown</option>\\r\\n<option value=\\\"mysql\\\">MySQL</option>\\r\\n<option value=\\\"mushcode\\\">MUSHCode</option>\\r\\n<option value=\\\"objectivec\\\">Objective-C</option>\\r\\n<option value=\\\"ocaml\\\">OCaml</option>\\r\\n<option value=\\\"pascal\\\">Pascal</option>\\r\\n<option value=\\\"perl\\\">Perl</option>\\r\\n<option value=\\\"pgsql\\\">pgSQL</option>\\r\\n<option value=\\\"php\\\">PHP</option>\\r\\n<option value=\\\"powershell\\\">Powershell</option>\\r\\n<option value=\\\"prolog\\\">Prolog</option>\\r\\n<option value=\\\"properties\\\">Properties</option>\\r\\n<option value=\\\"python\\\">Python</option>\\r\\n<option value=\\\"r\\\">R</option>\\r\\n<option value=\\\"rdoc\\\">RDoc</option>\\r\\n<option value=\\\"rhtml\\\">RHTML</option>\\r\\n<option value=\\\"ruby\\\">Ruby</option>\\r\\n<option value=\\\"rust\\\">Rust</option>\\r\\n<option value=\\\"sass\\\">SASS</option>\\r\\n<option value=\\\"scad\\\">SCAD</option>\\r\\n<option value=\\\"scala\\\">Scala</option>\\r\\n<option value=\\\"scheme\\\">Scheme</option>\\r\\n<option value=\\\"scss\\\">SCSS</option>\\r\\n<option value=\\\"sh\\\">SH</option>\\r\\n<option value=\\\"snippets\\\">snippets</option>\\r\\n<option value=\\\"sql\\\">SQL</option>\\r\\n<option value=\\\"stylus\\\">Stylus</option>\\r\\n<option value=\\\"svg\\\">SVG</option>\\r\\n<option value=\\\"tcl\\\">Tcl</option>\\r\\n<option value=\\\"tex\\\">Tex</option>\\r\\n<option value=\\\"text\\\">Text</option>\\r\\n<option value=\\\"textile\\\">Textile</option>\\r\\n<option value=\\\"toml\\\">Toml</option>\\r\\n<option value=\\\"twig\\\">Twig</option>\\r\\n<option value=\\\"typescript\\\">Typescript</option>\\r\\n<option value=\\\"vbscript\\\">VBScript</option>\\r\\n<option value=\\\"velocity\\\">Velocity</option>\\r\\n<option value=\\\"xml\\\">XML</option>\\r\\n<option value=\\\"xquery\\\">XQuery</option>\\r\\n<option value=\\\"yaml\\\">YAML</option>\\r\\n\";\n  }));\n\nHandlebars.registerPartial(\"common/themes\", Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<optgroup label=\\\"Bright\\\">\\r\\n    <option value=\\\"ace/theme/chrome\\\">Chrome</option>\\r\\n    <option value=\\\"ace/theme/clouds\\\">Clouds</option>\\r\\n    <option value=\\\"ace/theme/crimson_editor\\\">Crimson Editor</option>\\r\\n    <option value=\\\"ace/theme/dawn\\\">Dawn</option>\\r\\n    <option value=\\\"ace/theme/dreamweaver\\\">Dreamweaver</option>\\r\\n    <option value=\\\"ace/theme/eclipse\\\">Eclipse</option>\\r\\n    <option value=\\\"ace/theme/github\\\">GitHub</option>\\r\\n    <option value=\\\"ace/theme/solarized_light\\\">Solarized Light</option>\\r\\n    <option value=\\\"ace/theme/textmate\\\" selected=\\\"selected\\\">TextMate</option>\\r\\n    <option value=\\\"ace/theme/tomorrow\\\">Tomorrow</option>\\r\\n    <option value=\\\"ace/theme/xcode\\\">XCode</option>\\r\\n</optgroup>\\r\\n<optgroup label=\\\"Dark\\\">\\r\\n    <option value=\\\"ace/theme/ambiance\\\">Ambiance</option>\\r\\n    <option value=\\\"ace/theme/chaos\\\">Chaos</option>\\r\\n    <option value=\\\"ace/theme/clouds_midnight\\\">Clouds Midnight</option>\\r\\n    <option value=\\\"ace/theme/cobalt\\\">Cobalt</option>\\r\\n    <option value=\\\"ace/theme/idle_fingers\\\">idleFingers</option>\\r\\n    <option value=\\\"ace/theme/kr_theme\\\">krTheme</option>\\r\\n    <option value=\\\"ace/theme/merbivore\\\">Merbivore</option>\\r\\n    <option value=\\\"ace/theme/merbivore_soft\\\">Merbivore Soft</option>\\r\\n    <option value=\\\"ace/theme/mono_industrial\\\">Mono Industrial</option>\\r\\n    <option value=\\\"ace/theme/monokai\\\">Monokai</option>\\r\\n    <option value=\\\"ace/theme/pastel_on_dark\\\">Pastel on dark</option>\\r\\n    <option value=\\\"ace/theme/solarized_dark\\\">Solarized Dark</option>\\r\\n    <option value=\\\"ace/theme/terminal\\\">Terminal</option>\\r\\n    <option value=\\\"ace/theme/tomorrow_night\\\">Tomorrow Night</option>\\r\\n    <option value=\\\"ace/theme/tomorrow_night_blue\\\">Tomorrow Night Blue</option>\\r\\n    <option value=\\\"ace/theme/tomorrow_night_bright\\\">Tomorrow Night Bright</option>\\r\\n    <option value=\\\"ace/theme/tomorrow_night_eighties\\\">Tomorrow Night 80s</option>\\r\\n    <option value=\\\"ace/theme/twilight\\\">Twilight</option>    \\r\\n    <option value=\\\"ace/theme/vibrant_ink\\\">Vibrant Ink</option>\\r\\n</optgroup>\\r\\n\";\n  }));\n\nreturn this[\"JST\"];\n\n});","\ndefine('common/templates_compiled',['handlebars'], function(Handlebars) {\n\nthis[\"JST\"] = this[\"JST\"] || {};\n\nthis[\"JST\"][\"common/alert\"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"alert alert-\";\n  if (stack1 = helpers.type) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.type; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \" \";\n  if (stack1 = helpers.custClass) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.custClass; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \" fade in\\\" id=\\\"\";\n  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n\t<button type=\\\"button\\\" data-dismiss=\\\"alert\\\" class=\\\"close\\\">&times;</button>\\r\\n\t<span>\";\n  if (stack1 = helpers.msg) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.msg; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n\nthis[\"JST\"][\"common/modal\"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"  <!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">\";\n  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  buffer += escapeExpression(stack1)\n    + \"</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        \";\n  if (stack1 = helpers.body) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.body; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        \";\n  if (stack1 = helpers.footer) { stack1 = stack1.call(depth0, {hash:{},data:data}); }\n  else { stack1 = depth0.footer; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n      </div>\\r\\n    </div><!-- /.modal-content -->\\r\\n  </div><!-- /.modal-dialog -->\\r\\n</div><!-- /.modal -->\\r\\n\";\n  return buffer;\n  });\n\nreturn this[\"JST\"];\n\n});","\ndefine('common/templates/main',[\n\t'handlebars',\n\t'./helpers',\n\t'common/partials_compiled',\n\t'common/templates_compiled',\n\t'lodash'\n], function (Handlebars, helpers, partials, templates, _) {\n\t// register helpers\n\t_.each(helpers || [], function (helper, name) {\n\t\tHandlebars.registerHelper(name, helper);\n\t});\n\n\treturn templates;\n});\n\ndefine('common/templates', ['common/templates/main'], function (main) { return main; });\n","\ndefine('index/templates_compiled',['handlebars'], function(Handlebars) {\n\nthis[\"JST\"] = this[\"JST\"] || {};\n\nthis[\"JST\"][\"index\"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<input id=\\\"fileName\\\" autofocus type=\\\"text\\\" class=\\\"input-lg form-control\\\" placeholder=\\\"Open your file or create new by press Enter\\\">\\r\\n\";\n  });\n\nreturn this[\"JST\"];\n\n});","\ndefine('index/templates/main',[\n\t'handlebars',\n\t'common/templates',\n\t'index/templates_compiled',\n\t'lodash'\n], function (Handlebars, commonTemplates, templates, _) {\n\t// return compiled templates\n\treturn templates;\n});\n\ndefine('index/templates', ['index/templates/main'], function (main) { return main; });\n","\ndefine('index/IndexView',[\n\t'lodash',\n\t'backbone',\n\t'index/templates',\n\t'jquery',\n\t'common/utils'\n], function (_, Backbone, templates, $, utils) {\n\tvar IndexView = Backbone.View.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'container',\n\t\tid: 'indexPage',\n\n\t\ttemplate: templates.index,\n\n\t\tevents: {\n\t\t\t'keydown #fileName': 'beginEdit'\n\t\t},\n\n\t\tinitialize: function (options) {\n\t\t\tthis.listenTo(this.model, 'change', this.render);\n\t\t},\n\n\t\trender: function (model) {\n\t\t\tthis.$el.html(this.template(this.model.toJSON()));\n\t\t},\n\n\t\tbeginEdit: function (event) {\n\t\t\tif (event.which == 13) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tvar fileName = $.trim(this.$('#fileName').val()) || 'new';\n\t\t\t\tBackbone.history.navigate('/' + fileName, {trigger: true});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn IndexView;\n});\n","\ndefine('index/main',[\r\n\t'./IndexView',\r\n\t'app',\r\n\t'backbone'\r\n], function (IndexView, app, Backbone) {\r\n\treturn function (router, routeName) {\r\n\t\tvar model = new Backbone.Model(),\r\n\t\t\tindexView = new IndexView({\r\n\t\t\t\tmodel: model,\r\n\t\t\t});\r\n\r\n\t\t// here we have no data need  to set to model, so, just trigger change event.\t\r\n\t\tmodel.trigger('change');\r\n\r\n\t\t$('#main').append(indexView.el);\r\n\t\t\r\n\t\tapp.views.push(indexView);\r\n\t};\r\n});\r\n"]}